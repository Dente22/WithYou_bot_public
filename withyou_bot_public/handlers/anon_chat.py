from loader import bot
from anon_storage import (
    add_to_waiting, get_partner, get_chat_partner,
    end_chat, is_in_chat
)
from telebot.types import ReplyKeyboardMarkup
from menu import main_menu


def handle(bot):
    # üé≠ –í—Ö–æ–¥ –≤ –∞–Ω–æ–Ω–∏–º–Ω—ã–π —á–∞—Ç
    @bot.message_handler(func=lambda msg: msg.text == "üé≠ –ê–Ω–æ–Ω–∏–º–Ω—ã–π —á–∞—Ç")
    def start_anon_chat(message):
        user_id = message.chat.id

        if is_in_chat(user_id):
            bot.send_message(user_id, "–¢—ã —É–∂–µ –≤ –∞–Ω–æ–Ω–∏–º–Ω–æ–º —á–∞—Ç–µ. –ù–∞–ø–∏—à–∏ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫—É –∏–ª–∏ –Ω–∞–∂–º–∏ üîö –ó–∞–≤–µ—Ä—à–∏—Ç—å.")
            return

        warning = (
            "‚ö†Ô∏è *–í–∞–∂–Ω–æ!* –ï—Å–ª–∏ —É —Ç–µ–±—è —Å–∫—Ä—ã—Ç –ø—Ä–æ—Ñ–∏–ª—å Telegram (–Ω–µ—Ç username), "
            "–±–æ—Ç –Ω–µ —Å–º–æ–∂–µ—Ç –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–≤–æ–π –Ω–∏–∫ –ø—Ä–∏ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–∏ –≤ –õ–°.\n\n"
            "üîπ –£–±–µ–¥–∏—Å—å, —á—Ç–æ —É —Ç–µ–±—è —É–∫–∞–∑–∞–Ω username (–ø—Ä–∏–º–µ—Ä: @yourname)."
        )
        bot.send_message(user_id, warning, parse_mode="Markdown")

        partner_id = get_partner(user_id)
        if partner_id:
            markup = ReplyKeyboardMarkup(resize_keyboard=True)
            markup.add("üîö –ó–∞–≤–µ—Ä—à–∏—Ç—å", "üì© –ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –≤ –õ–°")
            bot.send_message(user_id, "–°–æ–±–µ—Å–µ–¥–Ω–∏–∫ –Ω–∞–π–¥–µ–Ω! –í—ã –∞–Ω–æ–Ω–∏–º–Ω—ã.", reply_markup=markup)
            bot.send_message(partner_id, "–°–æ–±–µ—Å–µ–¥–Ω–∏–∫ –Ω–∞–π–¥–µ–Ω! –í—ã –∞–Ω–æ–Ω–∏–º–Ω—ã.", reply_markup=markup)
        else:
            add_to_waiting(user_id)
            bot.send_message(user_id, "–ò—â—É —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞... –ü–æ–¥–æ–∂–¥–∏ –Ω–µ–º–Ω–æ–≥–æ.")

    # üîö –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –æ–±—â–µ–Ω–∏—è
    @bot.message_handler(func=lambda msg: msg.text == "üîö –ó–∞–≤–µ—Ä—à–∏—Ç—å")
    def end_anon(message):
        user_id = message.chat.id
        partner_id = end_chat(user_id)

        if partner_id:
            end_msg = "‚ùå –û–±—â–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ."
            bot.send_message(user_id, "–¢—ã –∑–∞–≤–µ—Ä—à–∏–ª –æ–±—â–µ–Ω–∏–µ.", reply_markup=main_menu(user_id))
            bot.send_message(partner_id, "–¢–≤–æ–π —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫ –∑–∞–≤–µ—Ä—à–∏–ª –æ–±—â–µ–Ω–∏–µ.", reply_markup=main_menu(partner_id))
            bot.send_message(user_id, end_msg, reply_markup=main_menu(user_id))
        else:
            bot.send_message(user_id, "–¢—ã —Å–µ–π—á–∞—Å –Ω–∏ —Å –∫–µ–º –Ω–µ –æ–±—â–∞–µ—à—å—Å—è.")

    # üì© –ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
    @bot.message_handler(func=lambda msg: msg.text == "üì© –ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –≤ –õ–°")
    def send_invite(message):
        user_id = message.chat.id
        partner_id = get_chat_partner(user_id)

        if partner_id:
            username = message.from_user.username
            text = (
                "üîî –°–æ–±–µ—Å–µ–¥–Ω–∏–∫ —Ö–æ—á–µ—Ç –ø–µ—Ä–µ–π—Ç–∏ –≤ –õ–°.\n"
                f"üîó –ù–∏–∫: @{username if username else '–Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω'}"
            )
            bot.send_message(partner_id, text)

    # üì© –ü–µ—Ä–µ—Å—ã–ª–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –º–µ–∂–¥—É —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞–º–∏
    @bot.message_handler(func=lambda msg: is_in_chat(msg.chat.id))
    def forward_message(message):
        sender = message.chat.id
        partner = get_chat_partner(sender)

        if partner:
            bot.send_message(partner, message.text)
