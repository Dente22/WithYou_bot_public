# void_stub.py
# üå´ –ó–∞–≥–ª—É—à–∫–∞: —Ä–µ–∞–∫—Ü–∏—è –Ω–∞ —á—É–≤—Å—Ç–≤–æ "–Ω–∏—á–µ–≥–æ –Ω–µ —á—É–≤—Å—Ç–≤—É—é"

from telebot import types
import random
from utils.history import push
from loader import bot

answers = {
    "üå´ –Ø –Ω–∏—á–µ–≥–æ –Ω–µ —á—É–≤—Å—Ç–≤—É—é": [
        "[Stub] –ü—É—Å—Ç–æ—Ç–∞... –Ω–æ —ç—Ç–æ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞. –í—Å—ë –≤–µ—Ä–Ω—ë—Ç—Å—è.",
        "[Stub] –ü—Ä–æ—Å—Ç–æ –ø–æ–±—ã—Ç—å ‚Äî —É–∂–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ.",
        "[Stub] –ò–Ω–æ–≥–¥–∞ –º—ã –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º—Å—è. –ù–µ –≤–∏–Ω–∏ —Å–µ–±—è –∑–∞ —ç—Ç–æ."
    ]
}

feeling_options = ["üòí –ö–∞–∫ –≤–µ—Ä–Ω—É—Ç—å —Å–µ–±—è?", "üëÄ –≠—Ç–æ –ø—Ä–æ–π–¥—ë—Ç?"]

feeling_answer = {
    "üòí –ö–∞–∫ –≤–µ—Ä–Ω—É—Ç—å —Å–µ–±—è?": [
        "[Stub] –í—Å—ë –≤–µ—Ä–Ω—ë—Ç—Å—è: —Ü–≤–µ—Ç–∞, –∑–∞–ø–∞—Ö–∏, –º—É–∑—ã–∫–∞. –¢—ã –Ω–µ –ø–æ—Ç–µ—Ä—è–Ω.",
        "[Stub] –¢—ã –≤ —Ä–µ–∂–∏–º–µ –æ–∂–∏–¥–∞–Ω–∏—è. –í—Å—ë –±—É–¥–µ—Ç —Ö–æ—Ä–æ—à–æ."
    ],
    "üëÄ –≠—Ç–æ –ø—Ä–æ–π–¥—ë—Ç?": [
        "[Stub] –î–∞. –î–∞–∂–µ –µ—Å–ª–∏ —Ç—ã –Ω–µ –≤–µ—Ä–∏—à—å ‚Äî —ç—Ç–æ –ø—Ä–æ–π–¥—ë—Ç.",
        "[Stub] –ü—É—Å—Ç–æ—Ç–∞ ‚Äî —ç—Ç–æ –Ω–µ —Ç—ã. –≠—Ç–æ –≤—Ä–µ–º–µ–Ω–Ω–æ."
    ]
}

def handle(bot, user_last_topic):
    @bot.message_handler(func=lambda msg: msg.text == "üå´ –Ø –Ω–∏—á–µ–≥–æ –Ω–µ —á—É–≤—Å—Ç–≤—É—é")
    def handle_feeling(message):
        user_last_topic[message.chat.id] = ("void", None)
        push(message.chat.id, "void")
        response = random.choice(answers[message.text])

        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        markup.add(*feeling_options)
        markup.add("üè† –ú–µ–Ω—é")

        bot.send_message(
            message.chat.id,
            f"{response}\n\n–ß—Ç–æ –∏–∑ —ç—Ç–æ–≥–æ —Ç–µ–±–µ —Å–µ–π—á–∞—Å –±–ª–∏–∂–µ?",
            reply_markup=markup
        )

    @bot.message_handler(func=lambda msg: msg.text in feeling_answer)
    def handle_feeling_option(message):
        user_last_topic[message.chat.id] = ("void", message.text)
        push(message.chat.id, f"void:{message.text}")
        response = random.choice(feeling_answer[message.text])

        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        markup.add("‚¨Ö –ù–∞–∑–∞–¥", "üè† –ú–µ–Ω—é")

        bot.send_message(message.chat.id, response, reply_markup=markup)

# ‚¨ÖÔ∏è –®–∞–≥ –Ω–∞–∑–∞–¥
def handle_void_step_back(bot, message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(*feeling_options)
    markup.add("üè† –ú–µ–Ω—é")
    bot.send_message(message.chat.id, "[Stub] –ß—Ç–æ –∏–∑ —ç—Ç–æ–≥–æ —Ç–µ–±–µ —Å–µ–π—á–∞—Å –±–ª–∏–∂–µ?", reply_markup=markup)
